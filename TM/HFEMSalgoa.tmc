%{
  #include <stdlib.h>

  int initial_day = 0;
%}
%{
  #include "nortlib.h"
  #include "tma.h"
  char ci_version[] = "$CGID: HFEMScmd.cc: Wed Mar  7 18:26:56 2018 $";
%}
state (Initialize, RunMode, Shutdown, Shutdown_Cal);
Validate Initialize;
state (part_0_idle_, RunMode_end_, Shutdown_1_, Shutdown_Cal_1_);
Validate part_0_idle_;
%{
  tma_state Initialize_cmds_[] = {
    {       0, ">telemetry start\n" },
    {       0, ">Soldrv select Mode 0\n" },
    {       1, ">Set Pman setpoint 5.5\n" },
    {       1, ">Set PrCO2p setpoint 4.5\n" },
    {       1, ">Set FlCO2p setpoint 2.0\n" },
    {       1, ">Set FlCO setpoint 2.25\n" },
    {       1, ">Set PrCO setpoint 5.75\n" },
    {       3, ">Set fcNO_NOx setpoint 0\n" },
    {       3, ">Set fcNO2_NOx setpoint 0\n" },
    {       3, ">Set fc_CO2e setpoint 0\n" },
    {       3, ">Set fcNO_NOy setpoint 0 \n" },
    {       3, ">Set fcEff_NOy setpoint 0\n" },
    {       3, ">Set fcZer_NOy setpoint 0\n" },
    {       3, ">Set FlNOx setpoint 0\n" },
    {       3, ">Set FlNOy setpoint 0\n" },
    {       3, ">Set FlCO2e3 setpoint 2.9\n" },
    {       3, ">Set PrCO2e1 setpoint 0.0\n" },
    {       3, ">Set PrCO2e2 setpoint 0\n" },
    {       3, ">Soldrv select Mode 0\n" },
    {       3, "#2" }, /* RunMode */
    {      -1, NULL }
  };
%}
depending on (Initialize once) {
  tma_init_state( 0, Initialize_cmds_, "Initialize" );
  Validate part_0_idle_;
}
%{
  tma_state RunMode_cmds_[] = {
    {       2, ">Set PrCO2p setpoint 4.5\n" },
    {       2, ">Set PrCO2p setpoint 4.5\n" },
    {       2, ">Set PrCO2p setpoint 4.5\n" },
    {       5, ">Set Pman setpoint 5.5\n" },
    {       5, ">Set Pman setpoint 5.5\n" },
    {       5, ">Set Pman setpoint 5.5\n" },
    {       9, ">Set FlCO2p setpoint 2.0\n" },
    {       9, ">Set FlCO2p setpoint 2.0\n" },
    {       9, ">Set FlCO2p setpoint 2.0\n" },
    {       9, ">Set FlCO2e3 setpoint 2.9\n" },
    {       9, ">Set FlCO2e3 setpoint 2.9\n" },
    {      14, ">Set FlCO setpoint 2.25\n" },
    {      14, ">Set FlCO setpoint 2.25\n" },
    {      14, ">Set FlCO setpoint 2.25\n" },
    {      20, ">Set PrCO setpoint 5.75\n" },
    {      20, ">Set PrCO setpoint 5.75\n" },
    {      20, ">Set PrCO setpoint 5.75\n" },
    {     320, ">Soldrv Select Mode 3\n" },
    {     320, "#6" }, /* RunMode_end_ */
    {      -1, NULL }
  };
%}
depending on (RunMode once) {
  tma_init_state( 0, RunMode_cmds_, "RunMode" );
  Validate part_0_idle_;
}
depending on ( RunMode_end_, 1 Hz ) {
          int cur_day;
          cur_day = (itime()-(5*3600))/86400L;

          if (initial_day == 0) {
            initial_day = cur_day;
          } else if (initial_day != cur_day) {
            if ((cur_day % 8) == 0) {
              Validate Shutdown_Cal;
            } else {
              Validate Shutdown;
            }
          }
        }
%{
  tma_state Shutdown_cmds_[] = {
    {       0, ">Soldrv Select Mode 7\n" },
    {       0, "?2,2700,7,3" }, /* Shutdown_1_ */
    {       0, ">Soldrv Select Mode 0\n" },
    {       0, "#5" }, /* part_0_idle_ */
    {       0, ">Savelog Automatic Restart\n" },
    {       0, ">Quit\n" },
    {      -1, NULL }
  };
%}
depending on (Shutdown once) {
  tma_init_state( 0, Shutdown_cmds_, "Shutdown" );
  Validate part_0_idle_;
}
depending on ( Shutdown_1_ ) {
  if (SolSt == 1) {
    tma_succeed( 0, 7 );
    validate part_0_idle_;
  }
}
%{
  tma_state Shutdown_Cal_cmds_[] = {
    {       0, ">Soldrv Select Mode 8\n" },
    {       0, "?2,3300,8,4" }, /* Shutdown_Cal_1_ */
    {       0, ">Soldrv Select Mode 0\n" },
    {       0, "#5" }, /* part_0_idle_ */
    {       0, ">Savelog Restart with Archive Cal;\n" },
    {       0, ">Quit\n" },
    {      -1, NULL }
  };
%}
depending on (Shutdown_Cal once) {
  tma_init_state( 0, Shutdown_Cal_cmds_, "Shutdown_Cal" );
  Validate part_0_idle_;
}
depending on ( Shutdown_Cal_1_ ) {
  if (SolSt == 1) {
    tma_succeed( 0, 8 );
    validate part_0_idle_;
  }
}
%{
  const int tma_n_partitions = 1;
%}
depending on ( 1 Hz ) {
  long int it;
  int subcase;

  it = itime();
  ci_settime( it );
  while ( (subcase = tma_process( it )) ) {
	switch (subcase) {
	  case -1:
	  case 0: break;
	  case 1: validate Initialize; break;
	  case 2: validate RunMode; break;
	  case 3: validate Shutdown; break;
	  case 4: validate Shutdown_Cal; break;
	  case 5: validate part_0_idle_; break;
	  case 6: validate RunMode_end_; break;
	  case 7: validate Shutdown_1_; break;
	  case 8: validate Shutdown_Cal_1_; break;
	  default:
		nl_error( 1, "Unexpected return value from tma_process" );
		break;
	}
  }
}
